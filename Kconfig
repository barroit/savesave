# SPDX-License-Identifier: GPL-3.0-only
mainmenu "SaveSave $(SSVERSION) Configuration"

menu "Compiler"

config CROSS_COMPILING
	bool "Cross compiling"
	depends on $(HOST) = "linux"

choice
	prompt "CC"

config CC_IS_GCC
	bool "gcc"
	depends on $(HOST) = "linux"

config CC_IS_CLANG
	bool "clang"
	depends on !CROSS_COMPILING

endchoice

choice
	prompt "CXX"
	depends on $(HOST) != "linux" || CROSS_COMPILING

config CXX_IS_GCC
	bool "g++"
	depends on $(HOST) = "linux"

config CXX_IS_CLANG
	bool "clang++"
	depends on !CROSS_COMPILING

endchoice

config CC_NAME
	string
	default "gcc" if CC_IS_GCC
	default "clang" if CC_IS_CLANG

config CXX_NAME
	string
	default "g++" if CXX_IS_GCC
	default "clang++" if CXX_IS_CLANG

config COMPILER_PREFIX
	string "Compiler prefix"
	depends on CROSS_COMPILING
	default "x86_64-w64-mingw32-" if $(ARCH) = "x86_64"
	default "aarch64-w64-mingw32-" if $(ARCH) = "aarch64"
	default "arch-xxx-xxx-"

endmenu # "Compiler"

menu "Compiler flags"

choice
	prompt "Debug level"
	default COMPILER_DEBUG_3

config COMPILER_DEBUG_0
	bool "0 - produces no debug information at all"

config COMPILER_DEBUG_1
	bool "1 - produces minimal information"

config COMPILER_DEBUG_2
	bool "2 - produces more information"

config COMPILER_DEBUG_3
	bool "3 - includes as much information as possible"

endchoice

choice
	prompt "Optimizations"
	default COMPILER_OPTIMIZE_0

config COMPILER_OPTIMIZE_0
	bool "0 - reduce compilation time"

config COMPILER_OPTIMIZE_1
	bool "1 - optimize a little"

config COMPILER_OPTIMIZE_2
	bool "2 - optimize even more"

config COMPILER_OPTIMIZE_3
	bool "3 - optimize yet more"

config COMPILER_OPTIMIZE_S
	bool "s - optimize for size"

config COMPILER_OPTIMIZE_FAST
	bool "fast - optimize to oblivion"
	help
	  Disregard strict standards compliance. Use as many optimizations as
	  possible.

config COMPILER_OPTIMIZE_G
	bool "g - optimize debugging experience"

config COMPILER_OPTIMIZE_Z
	bool "z - optimize aggressively for size rather than speed"

endchoice

config CONFIG_COMPILER_NDEBUG
	bool "define NDEBUG"
	default n

config COMPILER_WARNING_ALL
	bool "use -Wall"
	default y

config COMPILER_WARNING_EXTRA
	bool "use -Wextra"

endmenu # "Compiler flags"

menu "Features"

config CNTRL_CHAR_REPLACEMENT
	string "control char replacement"
	default "ï¿½"

config SNAPSHOT_THRESHOLD_SIZE_KB
	int "size threshold for creating snapshot (in KB)"
	default 10240

config ZIP_THRESHOLD_SIZE_KB
	int "size threshold for compression (in KB)"
	default 30720

config DEFAULT_SAVCONF_BASENAME
	string "basename of savconf"
	default ".savesave"

config DEFAULT_SAVCONF_ENVNAME
	string "getenv name of savconf"
	default "SAVESAVE"

endmenu # "Features"
